{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "0.1.0",
    "command": "gcc",
    "isShellCommand": true,
    "echoCommand": true,
    "args": [ 
        // All files to compile
        // - dlvm
        //"libs/dlvm/src/types.c",
        //"libs/dlvm/src/vm.c",

        // - dlvm-lang
        "main.c", 
        "src/compiler.c",

        // All include foldes
        // - dlvm
        "-Ilibs/dlvm/src",

        // - dlvm-lang
        "-Isrc",
        
        "-o", "bin/main", "-std=c11", 

        // Features
        "-fstrict-aliasing",

        // Warnings
        "-Wall", "-Wextra", "-Wunused", "-Wformat", "-Wparentheses", // "-Wconversion", We want this
        "-Wfatal-errors", 
        "-Wchkp",
        "-Wdouble-promotion",
        "-Wformat-overflow=2",
        "-Wformat-truncation=2",
        "-Wnull-dereference",
        "-Winit-self",
        "-Wimplicit-fallthrough=1",
        "-Wmisleading-indentation",
        "-Wmissing-include-dirs",
        "-Wunused-parameter",
        "-Wuninitialized",
        "-Wstrict-aliasing",
        "-Wstrict-overflow=5",
        "-Wstringop-overflow=4",
        "-Wsuggest-attribute=pure",
        "-Wsuggest-attribute=const",
        "-Wsuggest-attribute=noreturn",
        "-Wsuggest-attribute=format",
        "-Wmissing-format-attribute",
        "-Walloc-zero",
        "-Wduplicated-branches",
        "-Wduplicated-cond",
        // "-Wtraditional-conversion" enum values are casted when passed to uint8_t, so we are bombared with warnings
        // "-Wdeclaration-after-statement", don't know if we really want this
        "-Wshadow",
        "-Wunsafe-loop-optimizations",
        "-Wpointer-arith",
        "-Wbad-function-cast",
        "-Wcast-qual",
        "-Wcast-align",
        // "-Wwrite-strings", enable this when we can change the real source code again
        "-Wjump-misses-init",
        "-Wlogical-op",
        // "-Waggregate-return", We probably don't want this, unless we can avoid it easily
        "-Wno-aggressive-loop-optimizations",
        // "-Wold-style-definition", Figure out what this means
        // "-Wmissing-prototypes", Maybe
        // "-Wmissing-declarations",
        "-Wredundant-decls",
        "-Wrestrict",
        "-Winline"
     ],
     "windows": {
         "args": [ ]
     },
     "linux": {
         "args": [  ]
     },

     
    "showOutput": "always",

    "tasks": [
        {
            "taskName": "release",
            "args": [
                "-O3"
            ],
            "suppressTaskName": true
        },
        {
            "taskName": "debug",
            "args": [
                //"-mmpx", "-fcheck-pointer-bounds", 
                "-ggdb"
            ],
            "isBuildCommand": true,
            "suppressTaskName": true
        }
    ]
}